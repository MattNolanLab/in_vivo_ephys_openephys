#specify python environment (needs to be >v.3)
Sys.setenv(RETICULATE_PYTHON = "/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/bin/python3.6")
#use_virtualenv("/usr/local/Cellar/python3/3.6.1/Frameworks/Python.framework/Versions/3.6/bin/python3.6") # this way also works
require("reticulate")
source_python("pickle_reader.py") # run python script which loads the dataframes
pickle_data <- read_pickle_file("/Users/sarahtennant/Work/Analysis/R_invivo_OpenEphys/spatial_firing.pkl") # path to dataframe to load
View(pickle_data)
View(pickle_data)
cluster_firing_times <-pickle_data[,5]
cluster_firing_times <-pickle_data[0,5]
cluster_firing_times <-pickle_data[1,5]
cluster_firing_times <-pickle_data[12,5]
cluster_firing_times <-pickle_data[12,5]
cluster_firing_times <-pickle_data[12,5]
cluster_firing_times <-pickle_data[2,5]
cluster_firing_times <-pickle_data[3,5]
cluster_firing_times <-pickle_data[4,5]
cluster_firing_times <-pickle_data[10,5]
cluster_firing_times <-pickle_data[10,'firing_times'] # ramp cell in this dataset
cluster_firing_times <-pickle_data[10,'x_position_cm'] # ramp cell in this dataset
cluster_firing_locations <-pickle_data[10,'x_position_cm'] # ramp cell in this dataset
cluster_firing_times <-pickle_data[10,'firing_times'] # ramp cell in this dataset
cluster_firing_locations <-pickle_data[10,'x_position_cm'] # ramp cell in this dataset
cluster_firing_trials <-pickle_data[10,'trial_number'] # ramp cell in this dataset
View(pickle_data)
View(pickle_data)
cluster_firing_rate_beaconed <-pickle_data[10,'avg_spike_per_bin_b']
install.packages('lme4')
library(lme4)
lmmodel = lm(cluster_firing_locations ~ cluster_firing_rate_beaconed, data = pickle_data)
unlist(cluster_firing_locations, recursive = FALSE)
cluster_firing_locations = unlist(cluster_firing_locations, recursive = FALSE)
cluster_firing_locations = unlist(cluster_firing_locations, recursive = TRUE)
View(pickle_data)
cluster_firing_times = unlist(cluster_firing_times, recursive = TRUE)
View(pickle_data)
cluster_firing_times = unlist(cluster_firing_times, recursive = FALSE)
cluster_firing_locations = unlist(cluster_firing_locations, recursive = TRUE, use.names = FALSE)
cluster_firing_locations = unlist(cluster_firing_locations, use.names = FALSE)
unlist(cluster_firing_locations, use.names = FALSE)
unlist(cluster_firing_locations[1], use.names = FALSE)
unlist(cluster_firing_locations[[1]], use.names = FALSE)
cluster_firing_locations = unlist(cluster_firing_locations[[1]], use.names = FALSE)
